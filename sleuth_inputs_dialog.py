# -*- coding: utf-8 -*-
"""
/***************************************************************************
 SleuthInputsDialog
                                 A QGIS plugin
 To run the SLEUTH urban growth model in separate subregions, separate folders with layers in apropiate format and with apropiate naming convention are needed, and that is exactly what this plugin does. Additionally it stores an extent.json file for each subregion, containing data needed to convert gif outputs from SLEUTH to proper tiff rasters.

This code was made at LANCIS-UNAM supported by the National Science Foundation under Grant No. 1414052, CNH: The Dynamics of Multi-Scalar Adaptation in Megacities (PI H. Eakin), with additional support from the Inter-American Institute for Global Change Research under Collaborative Research Network-CRN3: “Coping with hydrological risk in megacities: Collaborative planning framework for the Mexico City Metropolitan Area” (Project number: CRN3108).
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-08-01
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Fidel Serrano Candela, Rodrigo Garcia Herrera
        email                : serranoycandela@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import uic
from PyQt5 import QtWidgets

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'sleuth_inputs_dialog_base.ui'))


class SleuthInputsDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(SleuthInputsDialog, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
